{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Express Stocks API"
  },
  "servers": [
    {
      "url": "https://express-stock-30545.herokuapp.com/"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "username": { "type": "string" },
          "createdAt": { "type": "timestamp" },
          "updatedAt": { "type": "timestamp" },
          "__v": { "type": "number" }
        }
      },
      "watchlist": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "ticker": { "type": "string" },
          "user": {
            "$ref": "#/components/schemas/user"
          },
          "created": { "type": "string" },
          "updated": { "type": "string" },
          "createdAt": { "type": "timestamp" },
          "updatedAt": { "type": "timestamp" },
          "__v": { "type": "number" }
        }
      },
      "watchlistViewable": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "ticker": { "type": "string" },
          "created": { "type": "string" },
          "updated": { "type": "string" }
        }
      },
      "watchlistWithPrice": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "stock_information": {
            "type": "object",
            "properties": {
              "symbol": { "type": "string" },
              "name": { "type": "string" },
              "currency": { "type": "string" },
              "price": { "type": "string" },
              "volume": { "type": "string" },
              "last_trade_time": { "type": "string" }
            }
          },
          "unavailable_tickers": {
            "type": "array",
            "items": { "type": "string" }
          },
          "watchlist": {
            "$ref": "#/components/schemas/watchlistViewable"
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Possible data request issue",
        "content": {
          "application/json": {
            "schema": {
              "type": "String",
              "example": {
                "message": "Validation Messages | Object ID not found"
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Not found."
      },
      "ServerError": {
        "description": "Oops! Something went wrong. Please try again later!"
      },
      "UnauthorizedError": {
        "description": "Unauthorized | Token expired | Token mismatch"
      },
      "UnauthorizedSuperRequest": {
        "description": "Forbidden"
      }
    }
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Hello from Stock API!",
        "tags": ["General"],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "String",
                  "example": {
                    "message": "Hello from Stock API!"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/secret": {
      "get": {
        "summary": "Route to test for token authentication",
        "tags": ["General"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "String",
                  "example": {
                    "message": "You see the secret"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List details for registered user accounts",
        "tags": ["Admin"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/user"
                      }
                    }
                  },
                  "example": {
                    "message": "List of users retrieved successfully",
                    "users": [
                      {
                        "_id": "ID",
                        "username": "demo1",
                        "salt": "SALT",
                        "hash": "HASH",
                        "createdAt": "2018-07-17T15:00:30.269Z",
                        "updatedAt": "2018-07-17T15:00:30.269Z",
                        "__v": 0
                      },
                      {
                        "_id": "ID",
                        "username": "user1",
                        "salt": "SALT",
                        "hash": "HASH",
                        "createdAt": "2018-07-17T15:34:59.005Z",
                        "updatedAt": "2018-07-17T15:34:59.005Z",
                        "__v": 0
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/UnauthorizedSuperRequest"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/signup": {
      "post": {
        "summary": "Sign up for an user account",
        "tags": ["User Service"],
        "requestBody": {
          "description": "account credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "username": "demo1",
                  "password": ""
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "String",
                  "example": {
                    "message": "Account created for username USERNAME"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/signin": {
      "post": {
        "summary": "Sign in for a token exchange (Token valid for 30 minutes)",
        "tags": ["User Service"],
        "requestBody": {
          "description":
            "account credentials (to match with registered records)",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "username": "demo1",
                  "password": ""
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "String",
                  "example": {
                    "message": "signin ok",
                    "token": "GENERATED TOKEN"
                  }
                }
              }
            }
          },
          "401": {
            "description": "no such user found"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/watchlist": {
      "get": {
        "summary": "Return watchlist for a signed-in user",
        "tags": ["WatchList Service"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "price",
            "in": "query",
            "description": "true to return prices on the user's watchlist",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "all",
            "in": "query",
            "description": "true to return watchlist for all users (require admin access)",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "if price is defined in query, stock_information and unavailable_tickers, otherwise watchlist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "watchlist": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/watchlistWithPrice"
                      }
                    }
                  },
                  "example": {
                    "message": "{ Stock prices on watchlist | Watchlist } retrieved successfully for user",
                    "stock_information": [
                      {
                        "symbol": "FB",
                        "name": "Facebook, Inc. Common Stock",
                        "currency": "USD",
                        "price": "209.36",
                        "volume": "77",
                        "last_trade_time": "2018-07-18 16:00:01"
                      },
                      {
                        "symbol": "MSFT",
                        "name": "Microsoft Corporation",
                        "currency": "USD",
                        "price": "105.12",
                        "volume": "3701",
                        "last_trade_time": "2018-07-18 16:00:02"
                      }
                    ],
                    "unavailable_tickers": [],
                    "watchlist": [
                      {
                        "id": "5b503f9aad79ed1aaa12291a",
                        "ticker": "FB",
                        "created": "2018-07-19T07:36:58.174Z"
                      },
                      {
                        "id": "5b504469ee93d91e93ce4a74",
                        "ticker": "APPL",
                        "created": "2018-07-19T07:57:29.674Z"
                      },
                      {
                        "id": "5b504469ee93d91e93ce4a75",
                        "ticker": "MSFT",
                        "created": "2018-07-19T07:57:29.719Z"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/UnauthorizedSuperRequest"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "post": {
        "summary": "Create a ticker under watchlist for a signed-in user",
        "tags": ["WatchList Service"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "ticker(s) to create",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "type": "string" },
                "example": {
                  "watchlist": ["AAPL", "MSFT"]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "if price is defined in query, stock_information and unavailable_tickers, otherwise watchlist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "String",
                  "example": {
                    "message": "Watchlist created for username USERNAME"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/watchlist/{watchlistId}/{newTicker}": {
      "put": {
        "summary": "Update a ticker under watchlist for a signed-in user",
        "tags": ["WatchList Service"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "watchlistId",
            "in": "path",
            "required": true,
            "description": "id of the user's watchlist to be updated",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ticker",
            "in": "path",
            "required": true,
            "description": "new ticker under the user's watchlist",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "String",
                  "example": {
                    "message": "Ticker successfully updated from OLD-TICKER to NEW-TICKER on USERNAME's watchlist"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/watchlist/{watchlistId}": {
      "delete": {
        "summary": "Delete a ticker under watchlist for a signed-in user",
        "tags": ["WatchList Service"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "watchlistId",
            "in": "path",
            "required": true,
            "description": "id of the user's watchlist to be deleted",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "String",
                  "example": {
                    "message": "Ticker TICKER successfully deleted from USERNAME's watchlist"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    }
  }
}
